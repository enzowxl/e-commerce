generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ProductTypes {
  T_SHIRT
  SHORTS
  SHIRTS
  HOODIE
  JEANS
}

enum UserRoles {
  ADMIN
  MEMBER
}

enum OrderStatus {
  WAITING_FOR_PAYMENT
  PAYMENT_CONFIRMED
}

model User {
  id           String    @id @default(uuid())
  name         String
  email        String    @unique
  role         UserRoles @default(MEMBER)
  passwordHash String    @map("password_hash")
  avatarUrl    String?   @map("avatar_url")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  orders Order[]

  @@map("users")
}

model Product {
  id          String       @id @default(uuid())
  slug        String       @unique
  name        String
  description String
  price       Float
  discount    Float?
  avatarUrl   String?      @map("avatar_url")
  type        ProductTypes
  sizes       String[]
  colors      String[]
  photos      String[]

  // comments    String[]
  // ratings     String[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String   @map("category_id")

  orderProducts OrderProduct[]

  @@map("products")
}

model Category {
  id        String  @id @default(uuid())
  slug      String  @unique
  name      String
  avatarUrl String? @map("avatar_url")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  products Product[]

  @@map("categories")
}

model Order {
  id     String      @id @default(uuid())
  status OrderStatus @default(WAITING_FOR_PAYMENT)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user   User?   @relation(fields: [userId], references: [id])
  userId String? @map("user_id")

  orderProducts OrderProduct[]

  @@map("orders")
}

model OrderProduct {
  id       String @id @default(uuid())
  price    Float
  quantity Float
  discount Float?

  order   Order  @relation(fields: [orderId], references: [id])
  orderId String

  product   Product @relation(fields: [productId], references: [id])
  productId String
}
