generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRoles {
  ADMIN
  MEMBER
}

enum OrderStatus {
  WAITING_FOR_PAYMENT
  PAYMENT_CONFIRMED
}

model User {
  id           String    @id @default(uuid())
  name         String
  email        String    @unique
  role         UserRoles @default(MEMBER)
  passwordHash String    @map("password_hash")
  photoUrl     String?   @map("photo_url")
  photoId      String?   @map("photo_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  order Order[]

  @@map("users")
}

model Product {
  id          String   @id @default(uuid())
  slug        String   @unique
  name        String
  price       Decimal  @db.Decimal(10, 2)
  discount    Int      @default(0)
  description String?
  photoUrl    String?  @map("photo_url")
  photoId     String?  @map("photo_id")
  sizes       String[]
  colors      String[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  category     Category? @relation(fields: [categorySlug], references: [slug])
  categorySlug String?   @map("category_id")

  orderItems OrderItem[]

  @@map("products")
}

model Category {
  id       String  @id @default(uuid())
  slug     String  @unique
  name     String
  photoUrl String? @map("photo_url")
  photoId  String? @map("photo_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  products Product[]

  @@map("categories")
}

model Order {
  id     String @id @default(uuid())
  status String @default("WAITING_FOR_PAYMENT")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id")

  orderItems OrderItem[]

  @@map("oders")
}

model OrderItem {
  id       String  @id @default(uuid())
  quantity Int
  price    Decimal @db.Decimal(10, 2)
  discount Int     @default(0)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  order   Order  @relation(fields: [orderId], references: [id])
  orderId String @map("order_id")

  product   Product @relation(fields: [productId], references: [id])
  productId String  @map("product_id")

  @@map("order_items")
}
